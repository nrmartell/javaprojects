import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Scanner;

import javax.swing.text.html.HTMLDocument.Iterator;

public class AnalyzePOI {

	public AnalyzePOI() {
		// TODO Auto-generated constructor stub
	}
	public static void main(String args[])throws IOException{
			
//		String content = new String();
//			int count=1;
//			File file = new File("namelist");
//			LinkedList<String> list = new LinkedList<String>();
//
//			 try {
//			Scanner sc = new Scanner(new FileInputStream(file));
//			while (sc.hasNextLine()){
//			content = sc.nextLine();
//			list.add(content);
//			}
//			sc.close();
//			}catch(FileNotFoundException fnf){
//			fnf.printStackTrace();
//			}
//			catch (Exception e) {
//			e.printStackTrace();
//			System.out.println("\nProgram terminated Safely...");
//			}
//
//			Collections.reverse(list);
//			Iterator i = (Iterator) list.iterator();
//			while (i != null) {
//			System.out.print("Node " + (count++) + " : ");
//			System.out.println();
//			}
		
		
		File input1 = new File("namelist");
        Scanner in = new Scanner(input1);
        String s = in.next();
        System.out.print(readItems(s));
	}
	
	
	
	
    public static LinkedList<String> readItems(String fileName) throws FileNotFoundException
    {
        File input = new File(fileName);
        Scanner in = new Scanner(input);
        String file = "";
        // Copy the contents from the file to a String
        while (in.hasNext())
        {
            file = in.next();
        }
        // Create the list
        LinkedList<String> list = new LinkedList<String>();       
        ListIterator<String> iter = list.listIterator();
        // Copy the String contents to the Linked List
        while (iter.hasNext())
        {
            for (int i=0; i<file.length(); i++)
            {
                file = in.next();
                list.add(file);
            }
        }
        return list;
    }
	
	
	public static void printLinkedList(){

	}
		
		

	
	public static void searchPerson(){
		
	}
	
	public static void insertPerson(){
		
	}
	
	public static void personSwap(){
		
	}
	
	public static void removeRecord(){
		
	}
		
	public static void removeAllRecords(){
		
	}
	
	public static void writeOutputFile(){
		
	}
	
	
		
	
		
		
	

}
