import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Scanner;

public class AnalyzePOI {

	public AnalyzePOI() {
		// TODO Auto-generated constructor stub
	}
	private static Scanner keyboard;
//	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		printLinkedList();
		
		
		public static void main(String args[])throws IOException{
			String content = new String();
			int count=1;
			File file = new File("abc.txt");
			LinkedList<String> list = new LinkedList<String>();

			 try {
			Scanner sc = new Scanner(new FileInputStream(file));
			while (sc.hasNextLine()){
			content = sc.nextLine();
			list.add(content);
			}
			sc.close();
			}catch(FileNotFoundException fnf){
			fnf.printStackTrace();
			}
			catch (Exception e) {
			e.printStackTrace();
			System.out.println("\nProgram terminated Safely...");
			}

			Collections.reverse(list);
			Iterator i = list.iterator();
			while (i.hasNext()) {
			System.out.print("Node " + (count++) + " : ");
			System.out.println(i.next());
			}
	}
	
	public static void printLinkedList(){

		
		
//BufferedReader keyboard, br;
		
		// Using a BufferedReader object to read lines
//		keyboard = new BufferedReader(new InputStreamReader(System.in));
//		
//        String fileName;
//        FileReader fileReader;
//        
//        try {
//			System.out.print("Enter the name of the file: ");
//			fileName = keyboard.readLine();
//			
//			fileReader = new FileReader(fileName);
//			
//			// Array for BoxTypes
//
//			
//			// Using a BufferedReader object to read lines
//			br = new BufferedReader(fileReader);
			
		
			
			
	}
		
		

	
	public static void searchPerson(){
		
	}
	
	public static void insertPerson(){
		
	}
	
	public static void personSwap(){
		
	}
	
	public static void removeRecord(){
		
	}
		
	public static void removeAllRecords(){
		
	}
	
	public static void writeOutputFile(){
		
	}
	
	
		
	
		
		
	

}
