import java.util.Scanner;
import java.io.FileInputStream;
import java.io.FileNotFoundException;


public class MainProg {
	private static Scanner keyboard;
	public static void main(String[] args){
		 keyboard = new Scanner(System.in);
	     System.out.print("Enter the name of the file: ");
	     String fileName = keyboard.nextLine();
	     Scanner inFile = null;
	        try {
	            inFile = new Scanner(new FileInputStream(fileName));
	        } catch (FileNotFoundException e) {
	            System.out.println("Incorrect File Name Entered, Cant Find File");
	            e.printStackTrace();
	        }
	        
	        
	        String volumesString = inFile.nextLine();
	        String boxVolumes[] = volumesString.split(" ");
	        int c = boxVolumes.length;
	        int r = boxVolumes[0].length();
	        
	        double[][] volume = new double[r][c];
//	        int maxMeals = 0;

	        
	        for (int i = 0; i < boxVolumes.length; i++) {
	            // Checking if there is a next line or not
	            // dont know how many lines there are yet.
	            if (inFile.hasNextLine()) {
	                String boxes = inFile.nextLine();
	                String[] arrBox = boxes.split(" ");
	                System.out.println(boxes);
	                // continue with any amount of entries. Then assign memory to array accordingly.
//	                int mealsThatDay = arrCalories.length;
//	                if (mealsThatDay > maxMeals)
//	                    maxMeals = mealsThatDay;
//	                weeklyCalories[day] = new int[mealsThatDay];

	                // Assigning the values to respective positions
//	                for (int meal = 0; meal < mealsThatDay; meal++) {
//	                    weeklyCalories[day][meal] = Integer.parseInt(arrCalories[meal]);
	                }
//	            } else {
//	                System.out.println("Error: Data is not provided for " + daysOfWeek[day] + ". Quiting the program.");
//	                return;
//	            }
//	        }
	     // If there is an extra line, more data in file than formatted for, should throw exception.
//	        if (inFile.hasNextLine()) {
//	            System.out.println("Error: Data is provided for more than 7  days. Quiting the program.");
//	            return;
	        }
	        keyboard.close();// close keyboard input
	        inFile.close();//close scanner
	
	}


	        
}
