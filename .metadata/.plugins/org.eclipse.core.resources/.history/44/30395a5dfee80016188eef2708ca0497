//*************************************************************************************/
/*	Natalie Martell	 UTEP ID: 80327338						   						  */
/*	Lab 1																			  */
/* 	TA: Anthony Ortiz																  */	
/* 	Date Modified 1/29/17															  */	
/* Purpose:  Pull data from an text file containing box dimensions.Then				  *										  */	
/* create a 2 dimensional array containing length width and height.Display volume 	  */
/* of each box,total volume, and dimensions of largest box and smallest box  		  */		 
//*************************************************************************************/

	import java.io.File;
	import java.io.FileNotFoundException;
	import java.util.Scanner;

	public class Calories1 {

	    public static void main(String[] args) throws FileNotFoundException {

	        // Creating File Object for the given file.
	        File file = new File("info.txt");
	        // Creating Scanner to read the file, passing file object as input.
	        Scanner in = new Scanner(file);

	        // Reading the first line which will contain all lengths
	        String MondayString = in.nextLine();
	        // Splitting the line by space (" ") , to create an array for all the values.
	        String Monday[] = MondayString.split(" ");
	        // creating variable n for the Number of boxes
	        int n = Monday.length;

	        //  Number of rows will be 3, columns will be n.
	        int [][] weeklyCalories = new int [7][n];

	        // Since the array was split into strings,conversion to double type is needed.
	        // Adding all the lengths at row 0, so that will be fixed.
	        for (int i = 0; i < n; i++) {
	            weeklyCalories[0][i] = Integer.parseInt(Monday[i]);
	        }

	        // Same process as widths and heights.
	        // For widths, it would be row with index 1 
	        // and for heights it would be row with index 2.
	        String tuesdayString = in.nextLine();
	        String Tuesday[] = tuesdayString.split(" ");

	        for (int i = 0; i < n; i++) {
	            weeklyCalories[1][i] = Integer.parseInt(Tuesday[i]);
	        }

	        String wednesdayString = in.nextLine();
	        String Wednesday[] = wednesdayString.split(" ");

	        for (int i = 0; i < n; i++) {
	            weeklyCalories[2][i] = Integer.parseInt(Wednesday[i]);
	        }
	        
	        
	        String thursdayString = in.nextLine();
	        String Thursday[] = thursdayString.split(" ");

	        for (int i = 0; i < n; i++) {
	            weeklyCalories[3][i] = Integer.parseInt(Thursday[i]);
	        }
	        
	        String fridayString = in.nextLine();
	        String Friday[] = fridayString.split(" ");

	        for (int i = 0; i < n; i++) {
	            weeklyCalories[4][i] = Integer.parseInt(Friday[i]);
	        }

	        String saturdayString = in.nextLine();
	        String Saturday[] = saturdayString.split(" ");

	        for (int i = 0; i < n; i++) {
	            weeklyCalories[5][i] = Integer.parseInt(Saturday[i]);
	        }
	        
	        String sundayString = in.nextLine();
	        String Sunday[] = sundayString.split(" ");

	        for (int i = 0; i < n; i++) {
	            weeklyCalories[6][i] = Integer.parseInt(Sunday[i]);
	        }
	        
	        
	        //call the methods/functions.
//	        System.out.println(boxes[i]);
	        getDailyCalories(weeklyCalories);
//	        System.out.println();
//	        getTotalVolume(boxes);
//	        System.out.println();
//	        showLargestBoxData(boxes);
//	        System.out.println();
//	        showSmallestBoxData(boxes);

	        in.close(); //closing scanner
	    }

	    // Prints volume of each box.
	    public static void getDailyCalories(int[][] weeklyCalories) {
	        // Number of boxes would be the length of entries for the entire row
//	        int numCalories = weeklyCalories[0].length;
	    	
	    	String daysOfWeek [] = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };

	        for (int i = 0; i < weeklyCalories.length; i++) {
	            // create volume variable length would be at row 0, width row 01 and height in row 02
	            int dailyCalories = weeklyCalories[i][0] + weeklyCalories[i][1] + weeklyCalories[i][2];
//	            System.out.println(dailyCalories);
	            String mondayMeals = "Monday";
	            
	            
	            
	            
	            System.out.println("Daily Total Calories For "  + i + " is " + dailyCalories);
	            
//	            System.out.println("Tuesay Total Calories: " +(i + 1)  +" is " + dailyCalories);
//	            System.out.println("Wednesday Total Calories: " + (i + 1) + " is " + dailyCalories);
//	            System.out.println("Thursday Total Calories: "  + (i + 1) +" is " + dailyCalories);
//	            System.out.println("Friday Total Calories: "  +  (i + 1) +" is " + dailyCalories);
//	            System.out.println("Saturday Total Calories:"  + (i + 1) +" is " + dailyCalories);
//	            System.out.println("Sunday Total Calories:" + (i + 1) +" is " + dailyCalories);
	            
	        }
	    }

	    // Prints the sum of volume of all the boxes.
//	    public static void getTotalVolume(double[][] boxes) {
//
//	        int numBoxes = boxes[0].length;
//	        double totalVolume = 0;
//
//	        for (int i = 0; i < numBoxes; i++) {
//	            double dailyCalorie = boxes[i][0] + boxes[i][1] + boxes[i][2];
////	            double dailyCalorie = boxes[i][0];
//	        	System.out.println(dailyCalorie);
//	            
////	            totalVolume += dailyCalorie;
//	        }
//
//	        System.out.println("Volume Total: " + totalVolume);
//	    }
//
//	    // Prints Length, width and height for the box with largest volume.
//	    public static void showLargestBoxData(double[][] boxes) {
//
//	        int numBoxes = boxes[0].length;
//	        // Setting maxVolume to be -1, 
//	        //any box with non-negative volume, it will be more than this.
//	        double maxVolume = -1;
//	        double maxlength = 0;
//	        double maxwidth = 0;
//	        double maxheight = 0;
//
//	        for (int i = 0; i < numBoxes; i++) {
//	            double volume = boxes[0][i] * boxes[1][i] * boxes[2][i];
//	            // If the volume of this box is greater than the current max volume, value will be replaced
//	            if (volume > maxVolume) {
//	                maxVolume = volume;
//	                maxlength = boxes[0][i];
//	                maxwidth = boxes[1][i];
//	                maxheight = boxes[2][i];
//	            }
//
//	        }
//	        System.out.println("Dimensions of Biggest Box");
//	        System.out.println("Length of the biggest box is = " + maxlength);
//	        System.out.println("Width of the biggest box is = " + maxwidth);
//	        System.out.println("Height of the biggest box is = " + maxheight);
//	    }
//
//	    // Prints length width and height of smallest box volume
//	    public static void showSmallestBoxData(double[][] boxes) {
//
//	        int numBoxes = boxes[0].length;
//	        // Setting minVolume to be max double,
//	        //box volumes will be less than this.
//	        double minVolume = Double.MAX_VALUE;
//	        double minlength = 0;
//	        double minwidth = 0;
//	        double minheight = 0;
//
//	        for (int i = 0; i < numBoxes; i++) {
//	            double volume = boxes[0][i] * boxes[1][i] * boxes[2][i];
//	            // If the volume of this box is less than the current min volume, value will be replaced
//	            if (volume < minVolume) {
//	                minVolume = volume;
//	                minlength = boxes[0][i];
//	                minwidth = boxes[1][i];
//	                minheight = boxes[2][i];
//	            }
//	        }
//	        System.out.println("Dimensions of Smallest Box");
//	        System.out.println("Length of the smallest box is = " + minlength);
//	        System.out.println("Width of the smallest box is = " + minwidth);
//	        System.out.println("Height of the smallest box is = " + minheight);
//	    }

	}


